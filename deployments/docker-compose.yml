version: '3.9'

networks:
  log-parser:

services:
  postgres:
    image: postgres:16
    container_name: my_postgres
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - log-parser
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    build:
      context: ./
      dockerfile: deployments/Dockerfile
    container_name: log-parser
    restart: always
    depends_on:
      - postgres
    environment:
      CONFIG_FILE: /app_config.yaml
      POSTGRES_HOST: postgres
      POSTGRES_USER: admino
      POSTGRES_PASSWORD: admino
      POSTGRES_DB: pandora_logs
      POSTGRES_PORT: 5432
      APP_PORT: 8080
    volumes:
      - ./configs/config.yaml:/app_config.yaml
    ports:
      - "${APP_PORT}:8080"
    links:
      - postgres
    networks:
      - log-parser
  godoc:
    image: golang:1.24
    container_name: godoc
    command: sh -c "go install golang.org/x/tools/cmd/godoc@latest && /go/bin/godoc -http=:6060 -index"
    working_dir: /go/src/github.com/NoroSaroyan/log-parser
    volumes:
      - ./:/go/src/github.com/NoroSaroyan/log-parser
    ports:
      - "6060:6060"
    restart: unless-stopped
    networks:
      - log-parser
volumes:
  postgres_data:
